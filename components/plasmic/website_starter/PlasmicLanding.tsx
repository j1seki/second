// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 65WTfoF13oxC3Ntd74Xbhy
// Component: -kl2I4U_vEdn

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: 65WTfoF13oxC3Ntd74Xbhy/projectcss
import sty from "./PlasmicLanding.module.css"; // plasmic-import: -kl2I4U_vEdn/css

import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: -kScrNHdeij5/icon
import NestIcon from "./icons/PlasmicIcon__Nest"; // plasmic-import: yTs0Ef8WS9n1/icon
import LatticeIcon from "./icons/PlasmicIcon__Lattice"; // plasmic-import: 7YttkHPwbT8o/icon
import LogoTedIcon from "./icons/PlasmicIcon__LogoTed"; // plasmic-import: hZzYX7fYz51_/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: g-9ScUUI4WVp/icon
import IconFacebookIcon from "./icons/PlasmicIcon__IconFacebook"; // plasmic-import: ARYttBM1jy8N/icon
import IconInstagramIcon from "./icons/PlasmicIcon__IconInstagram"; // plasmic-import: _2_DeEAdpAGr/icon
import IconTwitterIcon from "./icons/PlasmicIcon__IconTwitter"; // plasmic-import: VxK8S08HglwQ/icon
import IconLinkedInIcon from "./icons/PlasmicIcon__IconLinkedIn"; // plasmic-import: U3hHMKpWnS-B/icon

createPlasmicElementProxy;

export type PlasmicLanding__VariantMembers = {};
export type PlasmicLanding__VariantsArgs = {};
type VariantPropType = keyof PlasmicLanding__VariantsArgs;
export const PlasmicLanding__VariantProps = new Array<VariantPropType>();

export type PlasmicLanding__ArgsType = {};
type ArgPropType = keyof PlasmicLanding__ArgsType;
export const PlasmicLanding__ArgProps = new Array<ArgPropType>();

export type PlasmicLanding__OverridesType = {
  root?: p.Flex<"div">;
  saasNatureCompany?: p.Flex<"div">;
  navbarLogoLeft?: p.Flex<"div">;
  navbarContainer?: p.Flex<"div">;
  navbarContent?: p.Flex<"div">;
  navbarBrand?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  navbarMenu?: p.Flex<"div">;
  navbarLink?: p.Flex<"div">;
  navbarLink2?: p.Flex<"div">;
  navbarLink3?: p.Flex<"div">;
  navbarLink4?: p.Flex<"div">;
  button?: p.Flex<"div">;
  button2?: p.Flex<"div">;
  heroHeadingLeft?: p.Flex<"div">;
  container?: p.Flex<"div">;
  column?: p.Flex<"div">;
  content?: p.Flex<"div">;
  textWrapper?: p.Flex<"div">;
  actions?: p.Flex<"div">;
  button3?: p.Flex<"div">;
  column2?: p.Flex<"div">;
  imageWrapper?: p.Flex<"div">;
  image?: p.Flex<"div">;
  heroHeadingRight?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  column3?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  button4?: p.Flex<"div">;
  column4?: p.Flex<"div">;
  _3Columns?: p.Flex<"div">;
  column5?: p.Flex<"div">;
  imageWrapper2?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  imageText?: p.Flex<"div">;
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews?: p.Flex<"div">;
  column6?: p.Flex<"div">;
  imageWrapper3?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  imageText2?: p.Flex<"div">;
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2?: p.Flex<"div">;
  column7?: p.Flex<"div">;
  imageWrapper4?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  imageText3?: p.Flex<"div">;
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3?: p.Flex<"div">;
  section?: p.Flex<"div">;
  container3?: p.Flex<"div">;
  quoteWrapper?: p.Flex<"div">;
  trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures?: p.Flex<"div">;
  logoWrapper?: p.Flex<"div">;
  logos?: p.Flex<"div">;
  logoWrapper2?: p.Flex<"div">;
  logo3?: p.Flex<"div">;
  logoWrapper3?: p.Flex<"div">;
  logo4?: p.Flex<"div">;
  logoWrapper4?: p.Flex<"div">;
  logo5?: p.Flex<"div">;
  logoWrapper5?: p.Flex<"div">;
  logo6?: p.Flex<"div">;
  logoWrapper6?: p.Flex<"div">;
  logo7?: p.Flex<"div">;
  logoWrapper7?: p.Flex<"div">;
  logo8?: p.Flex<"div">;
  logoLattice?: p.Flex<"div">;
  page1?: p.Flex<"div">;
  slide?: p.Flex<"div">;
  logoFullWhite?: p.Flex<"div">;
  logoWrapper8?: p.Flex<"div">;
  logo9?: p.Flex<"div">;
  heroStack?: p.Flex<"div">;
  smallContainer?: p.Flex<"div">;
  titleSection?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  imageWrapper5?: p.Flex<"div">;
  image5?: p.Flex<"div">;
  section2?: p.Flex<"div">;
  container4?: p.Flex<"div">;
  quoteWrapper2?: p.Flex<"div">;
  button5?: p.Flex<"div">;
  footer?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  smallColumns?: p.Flex<"div">;
  column8?: p.Flex<"div">;
  logoWrapper9?: p.Flex<"div">;
  logo10?: p.Flex<"div">;
  logo11?: p.Flex<"div">;
  column9?: p.Flex<"div">;
  content4?: p.Flex<"div">;
  footerLinks?: p.Flex<"div">;
  link?: p.Flex<"div">;
  link2?: p.Flex<"div">;
  link3?: p.Flex<"div">;
  link4?: p.Flex<"div">;
  link5?: p.Flex<"div">;
  column10?: p.Flex<"div">;
  content5?: p.Flex<"div">;
  footerLinks2?: p.Flex<"div">;
  aLink?: p.Flex<"div">;
  aLink2?: p.Flex<"div">;
  aLink3?: p.Flex<"div">;
  aLink4?: p.Flex<"div">;
  aLink5?: p.Flex<"div">;
  column11?: p.Flex<"div">;
  form?: p.Flex<"div">;
  formWrapper?: p.Flex<"div">;
  form2?: p.Flex<"div">;
  formTextInput?: p.Flex<"div">;
  formButton?: p.Flex<"div">;
  copyright?: p.Flex<"div">;
  content6?: p.Flex<"div">;
  links?: p.Flex<"div">;
  aLink6?: p.Flex<"div">;
  aLink7?: p.Flex<"div">;
  aLink8?: p.Flex<"div">;
  socialLinks?: p.Flex<"div">;
};

export interface DefaultLandingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLanding__RenderFunc(props: {
  variants: PlasmicLanding__VariantsArgs;
  args: PlasmicLanding__ArgsType;
  overrides: PlasmicLanding__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"saasNatureCompany"}
            data-plasmic-override={overrides.saasNatureCompany}
            className={classNames(projectcss.all, sty.saasNatureCompany)}
          >
            <div
              data-plasmic-name={"navbarLogoLeft"}
              data-plasmic-override={overrides.navbarLogoLeft}
              className={classNames(projectcss.all, sty.navbarLogoLeft)}
            >
              <div
                data-plasmic-name={"navbarContainer"}
                data-plasmic-override={overrides.navbarContainer}
                className={classNames(projectcss.all, sty.navbarContainer)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"navbarContent"}
                  data-plasmic-override={overrides.navbarContent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.navbarContent)}
                >
                  <div
                    data-plasmic-name={"navbarBrand"}
                    data-plasmic-override={overrides.navbarBrand}
                    className={classNames(projectcss.all, sty.navbarBrand)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"logo"}
                      data-plasmic-override={overrides.logo}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logo)}
                    >
                      <div
                        data-plasmic-name={"logo2"}
                        data-plasmic-override={overrides.logo2}
                        className={classNames(projectcss.all, sty.logo2)}
                      >
                        <VectorIcon
                          className={classNames(projectcss.all, sty.svg__ee4G)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gwult
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["goToHomepage"] = true
                              ? (() => {
                                  const actionArgs = { destination: `/` };
                                  return (({ destination }) => {
                                    if (
                                      typeof destination === "string" &&
                                      destination.startsWith("#")
                                    ) {
                                      document
                                        .getElementById(destination.substr(1))
                                        .scrollIntoView({ behavior: "smooth" });
                                    } else {
                                      __nextRouter?.push(destination);
                                    }
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["goToHomepage"] != null &&
                              typeof $steps["goToHomepage"] === "object" &&
                              typeof $steps["goToHomepage"].then === "function"
                            ) {
                              $steps["goToHomepage"] = await $steps[
                                "goToHomepage"
                              ];
                            }
                          }}
                        >
                          {"TrailHive"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"navbarMenu"}
                    data-plasmic-override={overrides.navbarMenu}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.navbarMenu)}
                  >
                    <div
                      data-plasmic-name={"navbarLink"}
                      data-plasmic-override={overrides.navbarLink}
                      className={classNames(projectcss.all, sty.navbarLink)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rKf6S
                        )}
                      >
                        {"Features"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink2"}
                      data-plasmic-override={overrides.navbarLink2}
                      className={classNames(projectcss.all, sty.navbarLink2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ngwu8
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink3"}
                      data-plasmic-override={overrides.navbarLink3}
                      className={classNames(projectcss.all, sty.navbarLink3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__njIpK
                        )}
                      >
                        {"Blog"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink4"}
                      data-plasmic-override={overrides.navbarLink4}
                      className={classNames(projectcss.all, sty.navbarLink4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zie5E
                        )}
                      >
                        {"About us"}
                      </div>
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qekOe
                        )}
                      >
                        {"Contact us"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button2"}
                      data-plasmic-override={overrides.button2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z7LKg
                        )}
                      >
                        {"Download the app"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroHeadingLeft"}
              data-plasmic-override={overrides.heroHeadingLeft}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroHeadingLeft)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"column"}
                  data-plasmic-override={overrides.column}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content"}
                    data-plasmic-override={overrides.content}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zemlP
                      )}
                    >
                      {"Your Ultimate Outdoor Companion"}
                    </div>
                    <div
                      data-plasmic-name={"textWrapper"}
                      data-plasmic-override={overrides.textWrapper}
                      className={classNames(projectcss.all, sty.textWrapper)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i79P8
                        )}
                      >
                        {
                          "Are you tired of spending hours searching for the perfect hiking or biking trail? TrailHive - the ultimate outdoor adventure app that connects you with the best trails in your area."
                        }
                      </div>
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"actions"}
                    data-plasmic-override={overrides.actions}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.actions)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button3"}
                      data-plasmic-override={overrides.button3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___87GbS
                        )}
                      >
                        {"Download the app"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"column2"}
                  data-plasmic-override={overrides.column2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column2)}
                >
                  <div
                    data-plasmic-name={"imageWrapper"}
                    data-plasmic-override={overrides.imageWrapper}
                    className={classNames(projectcss.all, sty.imageWrapper)}
                  >
                    <div
                      data-plasmic-name={"image"}
                      data-plasmic-override={overrides.image}
                      className={classNames(projectcss.all, sty.image)}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroHeadingRight"}
              data-plasmic-override={overrides.heroHeadingRight}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroHeadingRight)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                hasGap={true}
                className={classNames(projectcss.all, sty.container2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"column3"}
                  data-plasmic-override={overrides.column3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column3)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content2"}
                    data-plasmic-override={overrides.content2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fbIek
                      )}
                    >
                      {"Features"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o2Wth
                      )}
                    >
                      {"Stay Active and Healthy"}
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button4"}
                      data-plasmic-override={overrides.button4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5Msnj
                        )}
                      >
                        {"Learn more"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"column4"}
                  data-plasmic-override={overrides.column4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column4)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"_3Columns"}
                    data-plasmic-override={overrides._3Columns}
                    hasGap={true}
                    className={classNames(projectcss.all, sty._3Columns)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column5"}
                      data-plasmic-override={overrides.column5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column5)}
                    >
                      <div
                        data-plasmic-name={"imageWrapper2"}
                        data-plasmic-override={overrides.imageWrapper2}
                        className={classNames(
                          projectcss.all,
                          sty.imageWrapper2
                        )}
                      >
                        <div
                          data-plasmic-name={"image2"}
                          data-plasmic-override={overrides.image2}
                          className={classNames(projectcss.all, sty.image2)}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"imageText"}
                        data-plasmic-override={overrides.imageText}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.imageText)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xAben
                          )}
                        >
                          {"Access nature"}
                        </div>
                        <div
                          data-plasmic-name={
                            "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews"
                          }
                          data-plasmic-override={
                            overrides.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews
                          )}
                        >
                          {
                            "With TrailHive, you'll have access to a comprehensive database of trails, complete with detailed information on ratings, difficulty levels, and user reviews. "
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column6"}
                      data-plasmic-override={overrides.column6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column6)}
                    >
                      <div
                        data-plasmic-name={"imageWrapper3"}
                        data-plasmic-override={overrides.imageWrapper3}
                        className={classNames(
                          projectcss.all,
                          sty.imageWrapper3
                        )}
                      >
                        <div
                          data-plasmic-name={"image3"}
                          data-plasmic-override={overrides.image3}
                          className={classNames(projectcss.all, sty.image3)}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"imageText2"}
                        data-plasmic-override={overrides.imageText2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.imageText2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oNv6L
                          )}
                        >
                          {"Access nature"}
                        </div>
                        <div
                          data-plasmic-name={
                            "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2"
                          }
                          data-plasmic-override={
                            overrides.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2
                          )}
                        >
                          {
                            "With TrailHive, you'll have access to a comprehensive database of trails, complete with detailed information on ratings, difficulty levels, and user reviews. "
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"column7"}
                      data-plasmic-override={overrides.column7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column7)}
                    >
                      <div
                        data-plasmic-name={"imageWrapper4"}
                        data-plasmic-override={overrides.imageWrapper4}
                        className={classNames(
                          projectcss.all,
                          sty.imageWrapper4
                        )}
                      >
                        <div
                          data-plasmic-name={"image4"}
                          data-plasmic-override={overrides.image4}
                          className={classNames(projectcss.all, sty.image4)}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"imageText3"}
                        data-plasmic-override={overrides.imageText3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.imageText3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tMm
                          )}
                        >
                          {"Access nature"}
                        </div>
                        <div
                          data-plasmic-name={
                            "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
                          }
                          data-plasmic-override={
                            overrides.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3
                          )}
                        >
                          {
                            "With TrailHive, you'll have access to a comprehensive database of trails, complete with detailed information on ratings, difficulty levels, and user reviews. "
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"quoteWrapper"}
                  data-plasmic-override={overrides.quoteWrapper}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.quoteWrapper)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xvwXl
                    )}
                  >
                    {"Testimonial"}
                  </div>
                  <div
                    data-plasmic-name={
                      "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures"
                    }
                    data-plasmic-override={
                      overrides.trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures
                    )}
                  >
                    {
                      '"TrailHive has completely changed the way I explore the outdoors. The personalized trail recommendations and virtual challenges have kept me motivated and engaged with my adventures." '
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8FIo
                    )}
                  >
                    {"- John R."}
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"logoWrapper"}
                  data-plasmic-override={overrides.logoWrapper}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logoWrapper)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uyFaO
                    )}
                  >
                    {
                      "Trusted by teams at over 1,000 of the world\u2019s leading organizations"
                    }
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"logos"}
                    data-plasmic-override={overrides.logos}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.logos)}
                  >
                    <div
                      data-plasmic-name={"logoWrapper2"}
                      data-plasmic-override={overrides.logoWrapper2}
                      className={classNames(projectcss.all, sty.logoWrapper2)}
                    >
                      <div
                        data-plasmic-name={"logo3"}
                        data-plasmic-override={overrides.logo3}
                        className={classNames(projectcss.all, sty.logo3)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zSvNq)}
                          displayHeight={"20px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"62px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/logoDell.svg",
                            fullWidth: 62,
                            fullHeight: 20,
                            aspectRatio: 3.1
                          }}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper3"}
                      data-plasmic-override={overrides.logoWrapper3}
                      className={classNames(projectcss.all, sty.logoWrapper3)}
                    >
                      <div
                        data-plasmic-name={"logo4"}
                        data-plasmic-override={overrides.logo4}
                        className={classNames(projectcss.all, sty.logo4)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__xNzEz)}
                          displayHeight={"17px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"87px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/logoZendesk.svg",
                            fullWidth: 87,
                            fullHeight: 17,
                            aspectRatio: 5.117647
                          }}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper4"}
                      data-plasmic-override={overrides.logoWrapper4}
                      className={classNames(projectcss.all, sty.logoWrapper4)}
                    >
                      <div
                        data-plasmic-name={"logo5"}
                        data-plasmic-override={overrides.logo5}
                        className={classNames(projectcss.all, sty.logo5)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__c0BKb)}
                          displayHeight={"21px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"67px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/logoRakuten.svg",
                            fullWidth: 67,
                            fullHeight: 21,
                            aspectRatio: 3.190476
                          }}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper5"}
                      data-plasmic-override={overrides.logoWrapper5}
                      className={classNames(projectcss.all, sty.logoWrapper5)}
                    >
                      <div
                        data-plasmic-name={"logo6"}
                        data-plasmic-override={overrides.logo6}
                        className={classNames(projectcss.all, sty.logo6)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__bIqfj)}
                          displayHeight={"13px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"143px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/logoPacificFunds.svg",
                            fullWidth: 143,
                            fullHeight: 13,
                            aspectRatio: 11
                          }}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper6"}
                      data-plasmic-override={overrides.logoWrapper6}
                      className={classNames(projectcss.all, sty.logoWrapper6)}
                    >
                      <div
                        data-plasmic-name={"logo7"}
                        data-plasmic-override={overrides.logo7}
                        className={classNames(projectcss.all, sty.logo7)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oWozs)}
                          displayHeight={"24.269px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"80px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/logoNcr.svg",
                            fullWidth: 80,
                            fullHeight: 24.269,
                            aspectRatio: 3.2
                          }}
                        />
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper7"}
                      data-plasmic-override={overrides.logoWrapper7}
                      className={classNames(projectcss.all, sty.logoWrapper7)}
                    >
                      <div
                        data-plasmic-name={"logo8"}
                        data-plasmic-override={overrides.logo8}
                        className={classNames(projectcss.all, sty.logo8)}
                      >
                        <div
                          data-plasmic-name={"logoLattice"}
                          data-plasmic-override={overrides.logoLattice}
                          className={classNames(
                            projectcss.all,
                            sty.logoLattice
                          )}
                        >
                          <div
                            data-plasmic-name={"page1"}
                            data-plasmic-override={overrides.page1}
                            className={classNames(projectcss.all, sty.page1)}
                          >
                            <div
                              data-plasmic-name={"slide"}
                              data-plasmic-override={overrides.slide}
                              className={classNames(projectcss.all, sty.slide)}
                            >
                              <div
                                data-plasmic-name={"logoFullWhite"}
                                data-plasmic-override={overrides.logoFullWhite}
                                className={classNames(
                                  projectcss.all,
                                  sty.logoFullWhite
                                )}
                              >
                                <NestIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___61Aq7
                                  )}
                                  role={"img"}
                                />

                                <LatticeIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__pXQwW
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"logoWrapper8"}
                      data-plasmic-override={overrides.logoWrapper8}
                      className={classNames(projectcss.all, sty.logoWrapper8)}
                    >
                      <div
                        data-plasmic-name={"logo9"}
                        data-plasmic-override={overrides.logo9}
                        className={classNames(projectcss.all, sty.logo9)}
                      >
                        <LogoTedIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1ODg3
                          )}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroStack"}
              data-plasmic-override={overrides.heroStack}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroStack)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"smallContainer"}
                data-plasmic-override={overrides.smallContainer}
                hasGap={true}
                className={classNames(projectcss.all, sty.smallContainer)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleSection"}
                  data-plasmic-override={overrides.titleSection}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleSection)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hVb0W
                      )}
                    >
                      {
                        "Find new trails to explore and adventures to embark on."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
                <div
                  data-plasmic-name={"imageWrapper5"}
                  data-plasmic-override={overrides.imageWrapper5}
                  className={classNames(projectcss.all, sty.imageWrapper5)}
                >
                  <div
                    data-plasmic-name={"image5"}
                    data-plasmic-override={overrides.image5}
                    className={classNames(projectcss.all, sty.image5)}
                  />
                </div>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"section2"}
              data-plasmic-override={overrides.section2}
              hasGap={true}
              className={classNames(projectcss.all, sty.section2)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container4"}
                data-plasmic-override={overrides.container4}
                hasGap={true}
                className={classNames(projectcss.all, sty.container4)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"quoteWrapper2"}
                  data-plasmic-override={overrides.quoteWrapper2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.quoteWrapper2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aTqjg
                    )}
                  >
                    {"Testimonial"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pxqRl
                    )}
                  >
                    {
                      '"I love the social networking aspect of TrailHive. It\'s great to connect with other hikers and bikers and plan group events together."'
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uAfEo
                    )}
                  >
                    {"- Sara L."}
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"button5"}
                  data-plasmic-override={overrides.button5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.button5)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hoGug
                    )}
                  >
                    {"Learn More"}
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              hasGap={true}
              className={classNames(projectcss.all, sty.footer)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"smallColumns"}
                  data-plasmic-override={overrides.smallColumns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.smallColumns)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column8"}
                    data-plasmic-override={overrides.column8}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column8)}
                  >
                    <div
                      data-plasmic-name={"logoWrapper9"}
                      data-plasmic-override={overrides.logoWrapper9}
                      className={classNames(projectcss.all, sty.logoWrapper9)}
                    >
                      <div
                        data-plasmic-name={"logo10"}
                        data-plasmic-override={overrides.logo10}
                        className={classNames(projectcss.all, sty.logo10)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"logo11"}
                          data-plasmic-override={overrides.logo11}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.logo11)}
                        >
                          <Vector2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kJat6
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vYhV8
                            )}
                          >
                            {"TrailHive"}
                          </div>
                        </p.Stack>
                      </div>
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column9"}
                    data-plasmic-override={overrides.column9}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column9)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content4"}
                      data-plasmic-override={overrides.content4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.content4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tl8V
                        )}
                      >
                        {"App"}
                      </div>
                      <div
                        data-plasmic-name={"footerLinks"}
                        data-plasmic-override={overrides.footerLinks}
                        className={classNames(projectcss.all, sty.footerLinks)}
                      >
                        <div
                          data-plasmic-name={"link"}
                          data-plasmic-override={overrides.link}
                          className={classNames(projectcss.all, sty.link)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xHiMr
                            )}
                          >
                            {"Features"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"link2"}
                          data-plasmic-override={overrides.link2}
                          className={classNames(projectcss.all, sty.link2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yFi71
                            )}
                          >
                            {"Benefits"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"link3"}
                          data-plasmic-override={overrides.link3}
                          className={classNames(projectcss.all, sty.link3)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4ZYi
                            )}
                          >
                            {"Pricing"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"link4"}
                          data-plasmic-override={overrides.link4}
                          className={classNames(projectcss.all, sty.link4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rlvUx
                            )}
                          >
                            {"Explore"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"link5"}
                          data-plasmic-override={overrides.link5}
                          className={classNames(projectcss.all, sty.link5)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qPwrx
                            )}
                          >
                            {"Trails"}
                          </div>
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column10"}
                    data-plasmic-override={overrides.column10}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column10)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"content5"}
                      data-plasmic-override={overrides.content5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.content5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__acHw7
                        )}
                      >
                        {"Company"}
                      </div>
                      <div
                        data-plasmic-name={"footerLinks2"}
                        data-plasmic-override={overrides.footerLinks2}
                        className={classNames(projectcss.all, sty.footerLinks2)}
                      >
                        <div
                          data-plasmic-name={"aLink"}
                          data-plasmic-override={overrides.aLink}
                          className={classNames(projectcss.all, sty.aLink)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iWliT
                            )}
                          >
                            {"About"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"aLink2"}
                          data-plasmic-override={overrides.aLink2}
                          className={classNames(projectcss.all, sty.aLink2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jJ4Q
                            )}
                          >
                            {"Jobs"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"aLink3"}
                          data-plasmic-override={overrides.aLink3}
                          className={classNames(projectcss.all, sty.aLink3)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bzRs
                            )}
                          >
                            {"Press"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"aLink4"}
                          data-plasmic-override={overrides.aLink4}
                          className={classNames(projectcss.all, sty.aLink4)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__g7Jh3
                            )}
                          >
                            {"Support"}
                          </div>
                        </div>
                        <div
                          data-plasmic-name={"aLink5"}
                          data-plasmic-override={overrides.aLink5}
                          className={classNames(projectcss.all, sty.aLink5)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wGvVv
                            )}
                          >
                            {"Members"}
                          </div>
                        </div>
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"column11"}
                  data-plasmic-override={overrides.column11}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column11)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"form"}
                    data-plasmic-override={overrides.form}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.form)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"formWrapper"}
                      data-plasmic-override={overrides.formWrapper}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.formWrapper)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"form2"}
                        data-plasmic-override={overrides.form2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.form2)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"formTextInput"}
                          data-plasmic-override={overrides.formTextInput}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.formTextInput
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9XyLp
                            )}
                          >
                            {"Enter your email"}
                          </div>
                        </p.Stack>
                        <div
                          data-plasmic-name={"formButton"}
                          data-plasmic-override={overrides.formButton}
                          className={classNames(projectcss.all, sty.formButton)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lXlwl
                            )}
                          >
                            {"Subscribe"}
                          </div>
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5O2Sa
                      )}
                    >
                      {"By subscribing you agree to with our Privacy Policy"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"copyright"}
                data-plasmic-override={overrides.copyright}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyright)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content6"}
                  data-plasmic-override={overrides.content6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content6)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__a266F
                    )}
                  >
                    {"\u00a9 2023 TrailHive. All rights reserved."}
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"links"}
                    data-plasmic-override={overrides.links}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.links)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"aLink6"}
                      data-plasmic-override={overrides.aLink6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.aLink6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e6T9T
                        )}
                      >
                        {"Privacy Policy"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"aLink7"}
                      data-plasmic-override={overrides.aLink7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.aLink7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dOz3T
                        )}
                      >
                        {"Terms of Service"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"aLink8"}
                      data-plasmic-override={overrides.aLink8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.aLink8)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__y2MP
                        )}
                      >
                        {"Cookies Settings"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"socialLinks"}
                  data-plasmic-override={overrides.socialLinks}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.socialLinks)}
                >
                  <IconFacebookIcon
                    className={classNames(projectcss.all, sty.svg__syspE)}
                    role={"img"}
                  />

                  <IconInstagramIcon
                    className={classNames(projectcss.all, sty.svg__uZSiY)}
                    role={"img"}
                  />

                  <IconTwitterIcon
                    className={classNames(projectcss.all, sty.svg__ytOft)}
                    role={"img"}
                  />

                  <IconLinkedInIcon
                    className={classNames(projectcss.all, sty.svg__xxbK7)}
                    role={"img"}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "saasNatureCompany",
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logo",
    "logo2",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2",
    "heroHeadingLeft",
    "container",
    "column",
    "content",
    "textWrapper",
    "actions",
    "button3",
    "column2",
    "imageWrapper",
    "image",
    "heroHeadingRight",
    "container2",
    "column3",
    "content2",
    "button4",
    "column4",
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3",
    "section",
    "container3",
    "quoteWrapper",
    "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures",
    "logoWrapper",
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9",
    "heroStack",
    "smallContainer",
    "titleSection",
    "content3",
    "imageWrapper5",
    "image5",
    "section2",
    "container4",
    "quoteWrapper2",
    "button5",
    "footer",
    "columns",
    "smallColumns",
    "column8",
    "logoWrapper9",
    "logo10",
    "logo11",
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5",
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5",
    "column11",
    "form",
    "formWrapper",
    "form2",
    "formTextInput",
    "formButton",
    "copyright",
    "content6",
    "links",
    "aLink6",
    "aLink7",
    "aLink8",
    "socialLinks"
  ],
  saasNatureCompany: [
    "saasNatureCompany",
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logo",
    "logo2",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2",
    "heroHeadingLeft",
    "container",
    "column",
    "content",
    "textWrapper",
    "actions",
    "button3",
    "column2",
    "imageWrapper",
    "image",
    "heroHeadingRight",
    "container2",
    "column3",
    "content2",
    "button4",
    "column4",
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3",
    "section",
    "container3",
    "quoteWrapper",
    "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures",
    "logoWrapper",
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9",
    "heroStack",
    "smallContainer",
    "titleSection",
    "content3",
    "imageWrapper5",
    "image5",
    "section2",
    "container4",
    "quoteWrapper2",
    "button5",
    "footer",
    "columns",
    "smallColumns",
    "column8",
    "logoWrapper9",
    "logo10",
    "logo11",
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5",
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5",
    "column11",
    "form",
    "formWrapper",
    "form2",
    "formTextInput",
    "formButton",
    "copyright",
    "content6",
    "links",
    "aLink6",
    "aLink7",
    "aLink8",
    "socialLinks"
  ],
  navbarLogoLeft: [
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logo",
    "logo2",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2"
  ],
  navbarContainer: [
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logo",
    "logo2",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2"
  ],
  navbarContent: [
    "navbarContent",
    "navbarBrand",
    "logo",
    "logo2",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2"
  ],
  navbarBrand: ["navbarBrand", "logo", "logo2"],
  logo: ["logo", "logo2"],
  logo2: ["logo2"],
  navbarMenu: [
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "button",
    "button2"
  ],
  navbarLink: ["navbarLink"],
  navbarLink2: ["navbarLink2"],
  navbarLink3: ["navbarLink3"],
  navbarLink4: ["navbarLink4"],
  button: ["button"],
  button2: ["button2"],
  heroHeadingLeft: [
    "heroHeadingLeft",
    "container",
    "column",
    "content",
    "textWrapper",
    "actions",
    "button3",
    "column2",
    "imageWrapper",
    "image"
  ],
  container: [
    "container",
    "column",
    "content",
    "textWrapper",
    "actions",
    "button3",
    "column2",
    "imageWrapper",
    "image"
  ],
  column: ["column", "content", "textWrapper", "actions", "button3"],
  content: ["content", "textWrapper"],
  textWrapper: ["textWrapper"],
  actions: ["actions", "button3"],
  button3: ["button3"],
  column2: ["column2", "imageWrapper", "image"],
  imageWrapper: ["imageWrapper", "image"],
  image: ["image"],
  heroHeadingRight: [
    "heroHeadingRight",
    "container2",
    "column3",
    "content2",
    "button4",
    "column4",
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  container2: [
    "container2",
    "column3",
    "content2",
    "button4",
    "column4",
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  column3: ["column3", "content2", "button4"],
  content2: ["content2", "button4"],
  button4: ["button4"],
  column4: [
    "column4",
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  _3Columns: [
    "_3Columns",
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews",
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2",
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  column5: [
    "column5",
    "imageWrapper2",
    "image2",
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews"
  ],
  imageWrapper2: ["imageWrapper2", "image2"],
  image2: ["image2"],
  imageText: [
    "imageText",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews"
  ],
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews:
    [
      "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews"
    ],
  column6: [
    "column6",
    "imageWrapper3",
    "image3",
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2"
  ],
  imageWrapper3: ["imageWrapper3", "image3"],
  image3: ["image3"],
  imageText2: [
    "imageText2",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2"
  ],
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2:
    [
      "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2"
    ],
  column7: [
    "column7",
    "imageWrapper4",
    "image4",
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  imageWrapper4: ["imageWrapper4", "image4"],
  image4: ["image4"],
  imageText3: [
    "imageText3",
    "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
  ],
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3:
    [
      "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
    ],
  section: [
    "section",
    "container3",
    "quoteWrapper",
    "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures",
    "logoWrapper",
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9"
  ],
  container3: [
    "container3",
    "quoteWrapper",
    "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures",
    "logoWrapper",
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9"
  ],
  quoteWrapper: [
    "quoteWrapper",
    "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures"
  ],
  trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures:
    [
      "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures"
    ],
  logoWrapper: [
    "logoWrapper",
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9"
  ],
  logos: [
    "logos",
    "logoWrapper2",
    "logo3",
    "logoWrapper3",
    "logo4",
    "logoWrapper4",
    "logo5",
    "logoWrapper5",
    "logo6",
    "logoWrapper6",
    "logo7",
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo9"
  ],
  logoWrapper2: ["logoWrapper2", "logo3"],
  logo3: ["logo3"],
  logoWrapper3: ["logoWrapper3", "logo4"],
  logo4: ["logo4"],
  logoWrapper4: ["logoWrapper4", "logo5"],
  logo5: ["logo5"],
  logoWrapper5: ["logoWrapper5", "logo6"],
  logo6: ["logo6"],
  logoWrapper6: ["logoWrapper6", "logo7"],
  logo7: ["logo7"],
  logoWrapper7: [
    "logoWrapper7",
    "logo8",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite"
  ],
  logo8: ["logo8", "logoLattice", "page1", "slide", "logoFullWhite"],
  logoLattice: ["logoLattice", "page1", "slide", "logoFullWhite"],
  page1: ["page1", "slide", "logoFullWhite"],
  slide: ["slide", "logoFullWhite"],
  logoFullWhite: ["logoFullWhite"],
  logoWrapper8: ["logoWrapper8", "logo9"],
  logo9: ["logo9"],
  heroStack: [
    "heroStack",
    "smallContainer",
    "titleSection",
    "content3",
    "imageWrapper5",
    "image5"
  ],
  smallContainer: [
    "smallContainer",
    "titleSection",
    "content3",
    "imageWrapper5",
    "image5"
  ],
  titleSection: ["titleSection", "content3"],
  content3: ["content3"],
  imageWrapper5: ["imageWrapper5", "image5"],
  image5: ["image5"],
  section2: ["section2", "container4", "quoteWrapper2", "button5"],
  container4: ["container4", "quoteWrapper2", "button5"],
  quoteWrapper2: ["quoteWrapper2"],
  button5: ["button5"],
  footer: [
    "footer",
    "columns",
    "smallColumns",
    "column8",
    "logoWrapper9",
    "logo10",
    "logo11",
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5",
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5",
    "column11",
    "form",
    "formWrapper",
    "form2",
    "formTextInput",
    "formButton",
    "copyright",
    "content6",
    "links",
    "aLink6",
    "aLink7",
    "aLink8",
    "socialLinks"
  ],
  columns: [
    "columns",
    "smallColumns",
    "column8",
    "logoWrapper9",
    "logo10",
    "logo11",
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5",
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5",
    "column11",
    "form",
    "formWrapper",
    "form2",
    "formTextInput",
    "formButton"
  ],
  smallColumns: [
    "smallColumns",
    "column8",
    "logoWrapper9",
    "logo10",
    "logo11",
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5",
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5"
  ],
  column8: ["column8", "logoWrapper9", "logo10", "logo11"],
  logoWrapper9: ["logoWrapper9", "logo10", "logo11"],
  logo10: ["logo10", "logo11"],
  logo11: ["logo11"],
  column9: [
    "column9",
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5"
  ],
  content4: [
    "content4",
    "footerLinks",
    "link",
    "link2",
    "link3",
    "link4",
    "link5"
  ],
  footerLinks: ["footerLinks", "link", "link2", "link3", "link4", "link5"],
  link: ["link"],
  link2: ["link2"],
  link3: ["link3"],
  link4: ["link4"],
  link5: ["link5"],
  column10: [
    "column10",
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5"
  ],
  content5: [
    "content5",
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5"
  ],
  footerLinks2: [
    "footerLinks2",
    "aLink",
    "aLink2",
    "aLink3",
    "aLink4",
    "aLink5"
  ],
  aLink: ["aLink"],
  aLink2: ["aLink2"],
  aLink3: ["aLink3"],
  aLink4: ["aLink4"],
  aLink5: ["aLink5"],
  column11: [
    "column11",
    "form",
    "formWrapper",
    "form2",
    "formTextInput",
    "formButton"
  ],
  form: ["form", "formWrapper", "form2", "formTextInput", "formButton"],
  formWrapper: ["formWrapper", "form2", "formTextInput", "formButton"],
  form2: ["form2", "formTextInput", "formButton"],
  formTextInput: ["formTextInput"],
  formButton: ["formButton"],
  copyright: [
    "copyright",
    "content6",
    "links",
    "aLink6",
    "aLink7",
    "aLink8",
    "socialLinks"
  ],
  content6: ["content6", "links", "aLink6", "aLink7", "aLink8"],
  links: ["links", "aLink6", "aLink7", "aLink8"],
  aLink6: ["aLink6"],
  aLink7: ["aLink7"],
  aLink8: ["aLink8"],
  socialLinks: ["socialLinks"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  saasNatureCompany: "div";
  navbarLogoLeft: "div";
  navbarContainer: "div";
  navbarContent: "div";
  navbarBrand: "div";
  logo: "div";
  logo2: "div";
  navbarMenu: "div";
  navbarLink: "div";
  navbarLink2: "div";
  navbarLink3: "div";
  navbarLink4: "div";
  button: "div";
  button2: "div";
  heroHeadingLeft: "div";
  container: "div";
  column: "div";
  content: "div";
  textWrapper: "div";
  actions: "div";
  button3: "div";
  column2: "div";
  imageWrapper: "div";
  image: "div";
  heroHeadingRight: "div";
  container2: "div";
  column3: "div";
  content2: "div";
  button4: "div";
  column4: "div";
  _3Columns: "div";
  column5: "div";
  imageWrapper2: "div";
  image2: "div";
  imageText: "div";
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews: "div";
  column6: "div";
  imageWrapper3: "div";
  image3: "div";
  imageText2: "div";
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2: "div";
  column7: "div";
  imageWrapper4: "div";
  image4: "div";
  imageText3: "div";
  withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3: "div";
  section: "div";
  container3: "div";
  quoteWrapper: "div";
  trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures: "div";
  logoWrapper: "div";
  logos: "div";
  logoWrapper2: "div";
  logo3: "div";
  logoWrapper3: "div";
  logo4: "div";
  logoWrapper4: "div";
  logo5: "div";
  logoWrapper5: "div";
  logo6: "div";
  logoWrapper6: "div";
  logo7: "div";
  logoWrapper7: "div";
  logo8: "div";
  logoLattice: "div";
  page1: "div";
  slide: "div";
  logoFullWhite: "div";
  logoWrapper8: "div";
  logo9: "div";
  heroStack: "div";
  smallContainer: "div";
  titleSection: "div";
  content3: "div";
  imageWrapper5: "div";
  image5: "div";
  section2: "div";
  container4: "div";
  quoteWrapper2: "div";
  button5: "div";
  footer: "div";
  columns: "div";
  smallColumns: "div";
  column8: "div";
  logoWrapper9: "div";
  logo10: "div";
  logo11: "div";
  column9: "div";
  content4: "div";
  footerLinks: "div";
  link: "div";
  link2: "div";
  link3: "div";
  link4: "div";
  link5: "div";
  column10: "div";
  content5: "div";
  footerLinks2: "div";
  aLink: "div";
  aLink2: "div";
  aLink3: "div";
  aLink4: "div";
  aLink5: "div";
  column11: "div";
  form: "div";
  formWrapper: "div";
  form2: "div";
  formTextInput: "div";
  formButton: "div";
  copyright: "div";
  content6: "div";
  links: "div";
  aLink6: "div";
  aLink7: "div";
  aLink8: "div";
  socialLinks: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLanding__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLanding__VariantsArgs;
    args?: PlasmicLanding__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLanding__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicLanding__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLanding__ArgProps,
          internalVariantPropNames: PlasmicLanding__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLanding__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLanding";
  } else {
    func.displayName = `PlasmicLanding.${nodeName}`;
  }
  return func;
}

export const PlasmicLanding = Object.assign(
  // Top-level PlasmicLanding renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    saasNatureCompany: makeNodeComponent("saasNatureCompany"),
    navbarLogoLeft: makeNodeComponent("navbarLogoLeft"),
    navbarContainer: makeNodeComponent("navbarContainer"),
    navbarContent: makeNodeComponent("navbarContent"),
    navbarBrand: makeNodeComponent("navbarBrand"),
    logo: makeNodeComponent("logo"),
    logo2: makeNodeComponent("logo2"),
    navbarMenu: makeNodeComponent("navbarMenu"),
    navbarLink: makeNodeComponent("navbarLink"),
    navbarLink2: makeNodeComponent("navbarLink2"),
    navbarLink3: makeNodeComponent("navbarLink3"),
    navbarLink4: makeNodeComponent("navbarLink4"),
    button: makeNodeComponent("button"),
    button2: makeNodeComponent("button2"),
    heroHeadingLeft: makeNodeComponent("heroHeadingLeft"),
    container: makeNodeComponent("container"),
    column: makeNodeComponent("column"),
    content: makeNodeComponent("content"),
    textWrapper: makeNodeComponent("textWrapper"),
    actions: makeNodeComponent("actions"),
    button3: makeNodeComponent("button3"),
    column2: makeNodeComponent("column2"),
    imageWrapper: makeNodeComponent("imageWrapper"),
    image: makeNodeComponent("image"),
    heroHeadingRight: makeNodeComponent("heroHeadingRight"),
    container2: makeNodeComponent("container2"),
    column3: makeNodeComponent("column3"),
    content2: makeNodeComponent("content2"),
    button4: makeNodeComponent("button4"),
    column4: makeNodeComponent("column4"),
    _3Columns: makeNodeComponent("_3Columns"),
    column5: makeNodeComponent("column5"),
    imageWrapper2: makeNodeComponent("imageWrapper2"),
    image2: makeNodeComponent("image2"),
    imageText: makeNodeComponent("imageText"),
    withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews:
      makeNodeComponent(
        "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews"
      ),
    column6: makeNodeComponent("column6"),
    imageWrapper3: makeNodeComponent("imageWrapper3"),
    image3: makeNodeComponent("image3"),
    imageText2: makeNodeComponent("imageText2"),
    withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2:
      makeNodeComponent(
        "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews2"
      ),
    column7: makeNodeComponent("column7"),
    imageWrapper4: makeNodeComponent("imageWrapper4"),
    image4: makeNodeComponent("image4"),
    imageText3: makeNodeComponent("imageText3"),
    withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3:
      makeNodeComponent(
        "withTrailHiveYoullHaveAccessToAComprehensiveDatabaseOfTrailsCompleteWithDetailedInformationOnRatingsDifficultyLevelsAndUserReviews3"
      ),
    section: makeNodeComponent("section"),
    container3: makeNodeComponent("container3"),
    quoteWrapper: makeNodeComponent("quoteWrapper"),
    trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures:
      makeNodeComponent(
        "trailHiveHasCompletelyChangedTheWayIExploreTheOutdoorsThePersonalizedTrailRecommendationsAndVirtualChallengesHaveKeptMeMotivatedAndEngagedWithMyAdventures"
      ),
    logoWrapper: makeNodeComponent("logoWrapper"),
    logos: makeNodeComponent("logos"),
    logoWrapper2: makeNodeComponent("logoWrapper2"),
    logo3: makeNodeComponent("logo3"),
    logoWrapper3: makeNodeComponent("logoWrapper3"),
    logo4: makeNodeComponent("logo4"),
    logoWrapper4: makeNodeComponent("logoWrapper4"),
    logo5: makeNodeComponent("logo5"),
    logoWrapper5: makeNodeComponent("logoWrapper5"),
    logo6: makeNodeComponent("logo6"),
    logoWrapper6: makeNodeComponent("logoWrapper6"),
    logo7: makeNodeComponent("logo7"),
    logoWrapper7: makeNodeComponent("logoWrapper7"),
    logo8: makeNodeComponent("logo8"),
    logoLattice: makeNodeComponent("logoLattice"),
    page1: makeNodeComponent("page1"),
    slide: makeNodeComponent("slide"),
    logoFullWhite: makeNodeComponent("logoFullWhite"),
    logoWrapper8: makeNodeComponent("logoWrapper8"),
    logo9: makeNodeComponent("logo9"),
    heroStack: makeNodeComponent("heroStack"),
    smallContainer: makeNodeComponent("smallContainer"),
    titleSection: makeNodeComponent("titleSection"),
    content3: makeNodeComponent("content3"),
    imageWrapper5: makeNodeComponent("imageWrapper5"),
    image5: makeNodeComponent("image5"),
    section2: makeNodeComponent("section2"),
    container4: makeNodeComponent("container4"),
    quoteWrapper2: makeNodeComponent("quoteWrapper2"),
    button5: makeNodeComponent("button5"),
    footer: makeNodeComponent("footer"),
    columns: makeNodeComponent("columns"),
    smallColumns: makeNodeComponent("smallColumns"),
    column8: makeNodeComponent("column8"),
    logoWrapper9: makeNodeComponent("logoWrapper9"),
    logo10: makeNodeComponent("logo10"),
    logo11: makeNodeComponent("logo11"),
    column9: makeNodeComponent("column9"),
    content4: makeNodeComponent("content4"),
    footerLinks: makeNodeComponent("footerLinks"),
    link: makeNodeComponent("link"),
    link2: makeNodeComponent("link2"),
    link3: makeNodeComponent("link3"),
    link4: makeNodeComponent("link4"),
    link5: makeNodeComponent("link5"),
    column10: makeNodeComponent("column10"),
    content5: makeNodeComponent("content5"),
    footerLinks2: makeNodeComponent("footerLinks2"),
    aLink: makeNodeComponent("aLink"),
    aLink2: makeNodeComponent("aLink2"),
    aLink3: makeNodeComponent("aLink3"),
    aLink4: makeNodeComponent("aLink4"),
    aLink5: makeNodeComponent("aLink5"),
    column11: makeNodeComponent("column11"),
    form: makeNodeComponent("form"),
    formWrapper: makeNodeComponent("formWrapper"),
    form2: makeNodeComponent("form2"),
    formTextInput: makeNodeComponent("formTextInput"),
    formButton: makeNodeComponent("formButton"),
    copyright: makeNodeComponent("copyright"),
    content6: makeNodeComponent("content6"),
    links: makeNodeComponent("links"),
    aLink6: makeNodeComponent("aLink6"),
    aLink7: makeNodeComponent("aLink7"),
    aLink8: makeNodeComponent("aLink8"),
    socialLinks: makeNodeComponent("socialLinks"),

    // Metadata about props expected for PlasmicLanding
    internalVariantProps: PlasmicLanding__VariantProps,
    internalArgProps: PlasmicLanding__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLanding;
/* prettier-ignore-end */
