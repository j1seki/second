// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 65WTfoF13oxC3Ntd74Xbhy
// Component: A2FhYfbSg52O

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_website_starter.module.css"; // plasmic-import: 65WTfoF13oxC3Ntd74Xbhy/projectcss
import sty from "./PlasmicBlank.module.css"; // plasmic-import: A2FhYfbSg52O/css

import LogoDell2Icon from "./icons/PlasmicIcon__LogoDell2"; // plasmic-import: cTLFuyRm2zDi/icon
import LogoZendesk2Icon from "./icons/PlasmicIcon__LogoZendesk2"; // plasmic-import: 2CAy0fPX9BzT/icon
import LogoRakuten2Icon from "./icons/PlasmicIcon__LogoRakuten2"; // plasmic-import: NuNM52E5OeBM/icon
import LogoPacificFunds2Icon from "./icons/PlasmicIcon__LogoPacificFunds2"; // plasmic-import: D_xAX4kZFBGM/icon
import LogoNcr2Icon from "./icons/PlasmicIcon__LogoNcr2"; // plasmic-import: 1_1A78icAfB4/icon
import NestIcon from "./icons/PlasmicIcon__Nest"; // plasmic-import: yTs0Ef8WS9n1/icon
import LatticeIcon from "./icons/PlasmicIcon__Lattice"; // plasmic-import: 7YttkHPwbT8o/icon
import LogoTedIcon from "./icons/PlasmicIcon__LogoTed"; // plasmic-import: hZzYX7fYz51_/icon

createPlasmicElementProxy;

export type PlasmicBlank__VariantMembers = {};
export type PlasmicBlank__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlank__VariantsArgs;
export const PlasmicBlank__VariantProps = new Array<VariantPropType>();

export type PlasmicBlank__ArgsType = {};
type ArgPropType = keyof PlasmicBlank__ArgsType;
export const PlasmicBlank__ArgProps = new Array<ArgPropType>();

export type PlasmicBlank__OverridesType = {
  root?: p.Flex<"div">;
  saaSFuturisticApp?: p.Flex<"div">;
  navbarLogoLeft?: p.Flex<"div">;
  navbarContainer?: p.Flex<"div">;
  navbarContent?: p.Flex<"div">;
  navbarBrand?: p.Flex<"div">;
  logoWrapper?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  valtflowIcon?: p.Flex<"div">;
  navbarMenu?: p.Flex<"div">;
  navbarLink?: p.Flex<"div">;
  navbarLink2?: p.Flex<"div">;
  navbarLink3?: p.Flex<"div">;
  navbarLink4?: p.Flex<"div">;
  buttonPrimary?: p.Flex<"div">;
  buttonSecondary?: p.Flex<"div">;
  heroStack?: p.Flex<"div">;
  smallContainer?: p.Flex<"div">;
  titleSection?: p.Flex<"div">;
  pill?: p.Flex<"div">;
  content?: p.Flex<"div">;
  paragraphWrapper?: p.Flex<"div">;
  loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique?: p.Flex<"div">;
  actions?: p.Flex<"div">;
  buttonPrimary2?: p.Flex<"div">;
  buttonSecondary2?: p.Flex<"div">;
  imageWrapper?: p.Flex<"div">;
  logoTitle?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  logos?: p.Flex<"div">;
  logoWrapper2?: p.Flex<"div">;
  logo2?: p.Flex<"div">;
  logoWrapper3?: p.Flex<"div">;
  logo3?: p.Flex<"div">;
  logoWrapper4?: p.Flex<"div">;
  logo4?: p.Flex<"div">;
  logoWrapper5?: p.Flex<"div">;
  logo5?: p.Flex<"div">;
  logoWrapper6?: p.Flex<"div">;
  logo6?: p.Flex<"div">;
  logoWrapper7?: p.Flex<"div">;
  logo7?: p.Flex<"div">;
  logoLattice?: p.Flex<"div">;
  page1?: p.Flex<"div">;
  slide?: p.Flex<"div">;
  logoFullWhite?: p.Flex<"div">;
  logoWrapper8?: p.Flex<"div">;
  logo8?: p.Flex<"div">;
  section?: p.Flex<"div">;
  sectionTitle?: p.Flex<"div">;
  titleWrapper?: p.Flex<"div">;
  title?: p.Flex<"div">;
  container?: p.Flex<"div">;
  _2Columns?: p.Flex<"div">;
  column?: p.Flex<"div">;
  cardWrapper?: p.Flex<"div">;
  iconWrapper?: p.Flex<"div">;
  iconImage?: p.Flex<"div">;
  cardContent?: p.Flex<"div">;
  text?: p.Flex<"div">;
  actions2?: p.Flex<"div">;
  button?: p.Flex<"div">;
  column2?: p.Flex<"div">;
  cardWrapper2?: p.Flex<"div">;
  iconWrapper2?: p.Flex<"div">;
  iconImage2?: p.Flex<"div">;
  cardContent2?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  actions3?: p.Flex<"div">;
  button2?: p.Flex<"div">;
  _2Columns2?: p.Flex<"div">;
  column3?: p.Flex<"div">;
  iconWrapper3?: p.Flex<"div">;
  iconImage3?: p.Flex<"div">;
  cardContent3?: p.Flex<"div">;
  text3?: p.Flex<"div">;
  actions4?: p.Flex<"div">;
  column4?: p.Flex<"div">;
  imageWrapper2?: p.Flex<"div">;
  image?: p.Flex<"div">;
  heroNoImage?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  ourPowerfulAnalyticsProvidesInvaluableInsights?: p.Flex<"div">;
  unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement?: p.Flex<"div">;
  button3?: p.Flex<"div">;
  footer?: p.Flex<"div">;
  container3?: p.Flex<"div">;
  _3Columns?: p.Flex<"div">;
  column5?: p.Flex<"div">;
  footerLinksWrapper?: p.Flex<"div">;
  footerLinks?: p.Flex<"div">;
  footerLinksWrapper2?: p.Flex<"div">;
  column6?: p.Flex<"div">;
  footerLinksWrapper3?: p.Flex<"div">;
  addressWrapper?: p.Flex<"div">;
  footerLinksWrapper4?: p.Flex<"div">;
  socials?: p.Flex<"div">;
  termsWrapper?: p.Flex<"div">;
  column7?: p.Flex<"div">;
  logoWrapper9?: p.Flex<"div">;
  logo9?: p.Flex<"div">;
  valtflowIcon2?: p.Flex<"div">;
};

export interface DefaultBlankProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBlank__RenderFunc(props: {
  variants: PlasmicBlank__VariantsArgs;
  args: PlasmicBlank__ArgsType;
  overrides: PlasmicBlank__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"saaSFuturisticApp"}
            data-plasmic-override={overrides.saaSFuturisticApp}
            className={classNames(projectcss.all, sty.saaSFuturisticApp)}
          >
            <div
              data-plasmic-name={"navbarLogoLeft"}
              data-plasmic-override={overrides.navbarLogoLeft}
              className={classNames(projectcss.all, sty.navbarLogoLeft)}
            >
              <div
                data-plasmic-name={"navbarContainer"}
                data-plasmic-override={overrides.navbarContainer}
                className={classNames(projectcss.all, sty.navbarContainer)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"navbarContent"}
                  data-plasmic-override={overrides.navbarContent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.navbarContent)}
                >
                  <div
                    data-plasmic-name={"navbarBrand"}
                    data-plasmic-override={overrides.navbarBrand}
                    className={classNames(projectcss.all, sty.navbarBrand)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"logoWrapper"}
                      data-plasmic-override={overrides.logoWrapper}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logoWrapper)}
                    >
                      <div
                        data-plasmic-name={"logo"}
                        data-plasmic-override={overrides.logo}
                        className={classNames(projectcss.all, sty.logo)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"valtflowIcon"}
                          data-plasmic-override={overrides.valtflowIcon}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.valtflowIcon
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nGzb4
                          )}
                        >
                          {"Vaultflow"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"navbarMenu"}
                    data-plasmic-override={overrides.navbarMenu}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.navbarMenu)}
                  >
                    <div
                      data-plasmic-name={"navbarLink"}
                      data-plasmic-override={overrides.navbarLink}
                      className={classNames(projectcss.all, sty.navbarLink)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f7Amz
                        )}
                      >
                        {"Features"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink2"}
                      data-plasmic-override={overrides.navbarLink2}
                      className={classNames(projectcss.all, sty.navbarLink2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qiPb0
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink3"}
                      data-plasmic-override={overrides.navbarLink3}
                      className={classNames(projectcss.all, sty.navbarLink3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rgyE
                        )}
                      >
                        {"Blog"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"navbarLink4"}
                      data-plasmic-override={overrides.navbarLink4}
                      className={classNames(projectcss.all, sty.navbarLink4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mMO
                        )}
                      >
                        {"About us"}
                      </div>
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonPrimary"}
                      data-plasmic-override={overrides.buttonPrimary}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonPrimary)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kEpLp
                        )}
                      >
                        {"Download the app"}
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonSecondary"}
                      data-plasmic-override={overrides.buttonSecondary}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.buttonSecondary
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nFft3
                        )}
                      >
                        {"Talk to an expert"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
            <p.Stack
              as={"div"}
              data-plasmic-name={"heroStack"}
              data-plasmic-override={overrides.heroStack}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroStack)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"smallContainer"}
                data-plasmic-override={overrides.smallContainer}
                hasGap={true}
                className={classNames(projectcss.all, sty.smallContainer)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleSection"}
                  data-plasmic-override={overrides.titleSection}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleSection)}
                >
                  <div
                    data-plasmic-name={"pill"}
                    data-plasmic-override={overrides.pill}
                    className={classNames(projectcss.all, sty.pill)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xcuKw
                      )}
                    >
                      {"We just raised $20M in Series B. Learn more"}
                    </div>
                  </div>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content"}
                    data-plasmic-override={overrides.content}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zufVh
                      )}
                    >
                      {"Modern analytics\nfor the modern world"}
                    </div>
                    <div
                      data-plasmic-name={"paragraphWrapper"}
                      data-plasmic-override={overrides.paragraphWrapper}
                      className={classNames(
                        projectcss.all,
                        sty.paragraphWrapper
                      )}
                    >
                      <div
                        data-plasmic-name={
                          "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique"
                        }
                        data-plasmic-override={
                          overrides.loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique
                        }
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. "
                        }
                      </div>
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"actions"}
                    data-plasmic-override={overrides.actions}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.actions)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonPrimary2"}
                      data-plasmic-override={overrides.buttonPrimary2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonPrimary2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__o0NfK
                        )}
                      >
                        {"Download the app"}
                      </div>
                    </p.Stack>
                    <div
                      data-plasmic-name={"buttonSecondary2"}
                      data-plasmic-override={overrides.buttonSecondary2}
                      className={classNames(
                        projectcss.all,
                        sty.buttonSecondary2
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Ashx
                        )}
                      >
                        {"Talk to an expert"}
                      </div>
                    </div>
                  </p.Stack>
                </p.Stack>
                <div
                  data-plasmic-name={"imageWrapper"}
                  data-plasmic-override={overrides.imageWrapper}
                  className={classNames(projectcss.all, sty.imageWrapper)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q1Uo1
                    )}
                  >
                    {"Dummy text to delete in Webflow"}
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"logoTitle"}
              data-plasmic-override={overrides.logoTitle}
              hasGap={true}
              className={classNames(projectcss.all, sty.logoTitle)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ixA4X
                )}
              >
                {
                  "Trusted by teams at over 1,000 of the world\u2019s leading organizations"
                }
              </div>
              <p.Stack
                as={"div"}
                data-plasmic-name={"content2"}
                data-plasmic-override={overrides.content2}
                hasGap={true}
                className={classNames(projectcss.all, sty.content2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"logos"}
                  data-plasmic-override={overrides.logos}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logos)}
                >
                  <div
                    data-plasmic-name={"logoWrapper2"}
                    data-plasmic-override={overrides.logoWrapper2}
                    className={classNames(projectcss.all, sty.logoWrapper2)}
                  >
                    <div
                      data-plasmic-name={"logo2"}
                      data-plasmic-override={overrides.logo2}
                      className={classNames(projectcss.all, sty.logo2)}
                    >
                      <LogoDell2Icon
                        className={classNames(projectcss.all, sty.svg__s2Hsp)}
                        role={"img"}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper3"}
                    data-plasmic-override={overrides.logoWrapper3}
                    className={classNames(projectcss.all, sty.logoWrapper3)}
                  >
                    <div
                      data-plasmic-name={"logo3"}
                      data-plasmic-override={overrides.logo3}
                      className={classNames(projectcss.all, sty.logo3)}
                    >
                      <LogoZendesk2Icon
                        className={classNames(projectcss.all, sty.svg__lflPg)}
                        role={"img"}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper4"}
                    data-plasmic-override={overrides.logoWrapper4}
                    className={classNames(projectcss.all, sty.logoWrapper4)}
                  >
                    <div
                      data-plasmic-name={"logo4"}
                      data-plasmic-override={overrides.logo4}
                      className={classNames(projectcss.all, sty.logo4)}
                    >
                      <LogoRakuten2Icon
                        className={classNames(projectcss.all, sty.svg__z9ZoN)}
                        role={"img"}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper5"}
                    data-plasmic-override={overrides.logoWrapper5}
                    className={classNames(projectcss.all, sty.logoWrapper5)}
                  >
                    <div
                      data-plasmic-name={"logo5"}
                      data-plasmic-override={overrides.logo5}
                      className={classNames(projectcss.all, sty.logo5)}
                    >
                      <LogoPacificFunds2Icon
                        className={classNames(projectcss.all, sty.svg___4M7)}
                        role={"img"}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper6"}
                    data-plasmic-override={overrides.logoWrapper6}
                    className={classNames(projectcss.all, sty.logoWrapper6)}
                  >
                    <div
                      data-plasmic-name={"logo6"}
                      data-plasmic-override={overrides.logo6}
                      className={classNames(projectcss.all, sty.logo6)}
                    >
                      <LogoNcr2Icon
                        className={classNames(projectcss.all, sty.svg__oyo5Y)}
                        role={"img"}
                      />
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper7"}
                    data-plasmic-override={overrides.logoWrapper7}
                    className={classNames(projectcss.all, sty.logoWrapper7)}
                  >
                    <div
                      data-plasmic-name={"logo7"}
                      data-plasmic-override={overrides.logo7}
                      className={classNames(projectcss.all, sty.logo7)}
                    >
                      <div
                        data-plasmic-name={"logoLattice"}
                        data-plasmic-override={overrides.logoLattice}
                        className={classNames(projectcss.all, sty.logoLattice)}
                      >
                        <div
                          data-plasmic-name={"page1"}
                          data-plasmic-override={overrides.page1}
                          className={classNames(projectcss.all, sty.page1)}
                        >
                          <div
                            data-plasmic-name={"slide"}
                            data-plasmic-override={overrides.slide}
                            className={classNames(projectcss.all, sty.slide)}
                          >
                            <div
                              data-plasmic-name={"logoFullWhite"}
                              data-plasmic-override={overrides.logoFullWhite}
                              className={classNames(
                                projectcss.all,
                                sty.logoFullWhite
                              )}
                            >
                              <NestIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ouTot
                                )}
                                role={"img"}
                              />

                              <LatticeIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aEOtk
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"logoWrapper8"}
                    data-plasmic-override={overrides.logoWrapper8}
                    className={classNames(projectcss.all, sty.logoWrapper8)}
                  >
                    <div
                      data-plasmic-name={"logo8"}
                      data-plasmic-override={overrides.logo8}
                      className={classNames(projectcss.all, sty.logo8)}
                    >
                      <LogoTedIcon
                        className={classNames(projectcss.all, sty.svg__bn5PQ)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"sectionTitle"}
                data-plasmic-override={overrides.sectionTitle}
                hasGap={true}
                className={classNames(projectcss.all, sty.sectionTitle)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"titleWrapper"}
                  data-plasmic-override={overrides.titleWrapper}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.titleWrapper)}
                >
                  <div
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.title
                    )}
                  >
                    {"Features that work for your future."}
                  </div>
                </p.Stack>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tUzbM
                  )}
                >
                  {
                    "Check out our amazing features and experience the power of Vaultflow for yourself."
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"_2Columns"}
                  data-plasmic-override={overrides._2Columns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty._2Columns)}
                >
                  <div
                    data-plasmic-name={"column"}
                    data-plasmic-override={overrides.column}
                    className={classNames(projectcss.all, sty.column)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"cardWrapper"}
                      data-plasmic-override={overrides.cardWrapper}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.cardWrapper)}
                    >
                      <div
                        data-plasmic-name={"iconWrapper"}
                        data-plasmic-override={overrides.iconWrapper}
                        className={classNames(projectcss.all, sty.iconWrapper)}
                      >
                        <div
                          data-plasmic-name={"iconImage"}
                          data-plasmic-override={overrides.iconImage}
                          className={classNames(projectcss.all, sty.iconImage)}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"cardContent"}
                        data-plasmic-override={overrides.cardContent}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.cardContent)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yxGxZ
                          )}
                        >
                          {"Analytics Dashboard"}
                        </div>
                        <div
                          data-plasmic-name={"text"}
                          data-plasmic-override={overrides.text}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text
                          )}
                        >
                          {
                            "Our Analytics Dashboard provides a clear and intuitive interface for you to easily analyze your data. From customizable graphs to real-time data updates, our dashboard offers everything you need to gain valuable insights."
                          }
                        </div>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"actions2"}
                          data-plasmic-override={overrides.actions2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.actions2)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"button"}
                            data-plasmic-override={overrides.button}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.button)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nOVwx
                              )}
                            >
                              {"View dashboard"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>
                  <div
                    data-plasmic-name={"column2"}
                    data-plasmic-override={overrides.column2}
                    className={classNames(projectcss.all, sty.column2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"cardWrapper2"}
                      data-plasmic-override={overrides.cardWrapper2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.cardWrapper2)}
                    >
                      <div
                        data-plasmic-name={"iconWrapper2"}
                        data-plasmic-override={overrides.iconWrapper2}
                        className={classNames(projectcss.all, sty.iconWrapper2)}
                      >
                        <div
                          data-plasmic-name={"iconImage2"}
                          data-plasmic-override={overrides.iconImage2}
                          className={classNames(projectcss.all, sty.iconImage2)}
                        />
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"cardContent2"}
                        data-plasmic-override={overrides.cardContent2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.cardContent2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bjogQ
                          )}
                        >
                          {"Digital Credit Tokens"}
                        </div>
                        <div
                          data-plasmic-name={"text2"}
                          data-plasmic-override={overrides.text2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text2
                          )}
                        >
                          {
                            "Reward your customers and incentivize engagement with our innovative digital credit tokens. Our tokens can be customized to match your branding, and are a flexible and scalable way to drive customer loyalty and encourage repeat business."
                          }
                        </div>
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"actions3"}
                          data-plasmic-override={overrides.actions3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.actions3)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"button2"}
                            data-plasmic-override={overrides.button2}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.button2)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ahiOe
                              )}
                            >
                              {"View tokens"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"_2Columns2"}
                  data-plasmic-override={overrides._2Columns2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty._2Columns2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column3"}
                    data-plasmic-override={overrides.column3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column3)}
                  >
                    <div
                      data-plasmic-name={"iconWrapper3"}
                      data-plasmic-override={overrides.iconWrapper3}
                      className={classNames(projectcss.all, sty.iconWrapper3)}
                    >
                      <div
                        data-plasmic-name={"iconImage3"}
                        data-plasmic-override={overrides.iconImage3}
                        className={classNames(projectcss.all, sty.iconImage3)}
                      />
                    </div>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"cardContent3"}
                      data-plasmic-override={overrides.cardContent3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.cardContent3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cCdI0
                        )}
                      >
                        {"Code collaboration"}
                      </div>
                      <div
                        data-plasmic-name={"text3"}
                        data-plasmic-override={overrides.text3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text3
                        )}
                      >
                        {
                          "Our advanced code synchronization technology ensures that your data is always up-to-date and accurate, no matter where it's coming from. Whether you're integrating data from multiple sources or working with a team of developers, our synchronization technology makes it easy to collaborate and ensure that your data is consistent and reliable."
                        }
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"actions4"}
                        data-plasmic-override={overrides.actions4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.actions4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0B3Gl
                          )}
                        >
                          {"View code collaboration"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                  <div
                    data-plasmic-name={"column4"}
                    data-plasmic-override={overrides.column4}
                    className={classNames(projectcss.all, sty.column4)}
                  >
                    <div
                      data-plasmic-name={"imageWrapper2"}
                      data-plasmic-override={overrides.imageWrapper2}
                      className={classNames(projectcss.all, sty.imageWrapper2)}
                    >
                      <div
                        data-plasmic-name={"image"}
                        data-plasmic-override={overrides.image}
                        className={classNames(projectcss.all, sty.image)}
                      />
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
            <div
              data-plasmic-name={"heroNoImage"}
              data-plasmic-override={overrides.heroNoImage}
              className={classNames(projectcss.all, sty.heroNoImage)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                hasGap={true}
                className={classNames(projectcss.all, sty.container2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content3"}
                  data-plasmic-override={overrides.content3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content3)}
                >
                  <div
                    data-plasmic-name={
                      "ourPowerfulAnalyticsProvidesInvaluableInsights"
                    }
                    data-plasmic-override={
                      overrides.ourPowerfulAnalyticsProvidesInvaluableInsights
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ourPowerfulAnalyticsProvidesInvaluableInsights
                    )}
                  >
                    {" Our powerful analytics provides invaluable insights."}
                  </div>
                  <div
                    data-plasmic-name={
                      "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement"
                    }
                    data-plasmic-override={
                      overrides.unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement
                    )}
                  >
                    {
                      "Unlock the power of data with our cutting-edge analytics product. Get instant insights with our user-friendly Analytics Dashboard, and take advantage of our innovative digital credit tokens to reward your customers and incentivize engagement. "
                    }
                  </div>
                  <div
                    data-plasmic-name={"button3"}
                    data-plasmic-override={overrides.button3}
                    className={classNames(projectcss.all, sty.button3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t6AvW
                      )}
                    >
                      {"Download the app"}
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
            <div
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames(projectcss.all, sty.footer)}
            >
              <div
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"_3Columns"}
                  data-plasmic-override={overrides._3Columns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty._3Columns)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column5"}
                    data-plasmic-override={overrides.column5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column5)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"footerLinksWrapper"}
                      data-plasmic-override={overrides.footerLinksWrapper}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.footerLinksWrapper
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sa8O
                        )}
                      >
                        {"Contact"}
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"footerLinks"}
                        data-plasmic-override={overrides.footerLinks}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.footerLinks)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kHwZ
                          )}
                        >
                          {"Work inquires: work@vaultflow.com"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__us4Lf
                          )}
                        >
                          {"PR and speaking: press@vaultflow.com"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9F4A
                          )}
                        >
                          {"New business: newbusiness@vaultflow.com"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"footerLinksWrapper2"}
                      data-plasmic-override={overrides.footerLinksWrapper2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.footerLinksWrapper2
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fwchP
                        )}
                      >
                        {"Careers"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oUt9I
                        )}
                      >
                        {"Careers@vaultflow.com"}
                      </div>
                    </p.Stack>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xIidz
                      )}
                    >
                      {"\u00a9 2023 Vaultflow. All Rights Reserved."}
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"column6"}
                    data-plasmic-override={overrides.column6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column6)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"footerLinksWrapper3"}
                      data-plasmic-override={overrides.footerLinksWrapper3}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.footerLinksWrapper3
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fSgn1
                        )}
                      >
                        {"Address"}
                      </div>
                      <div
                        data-plasmic-name={"addressWrapper"}
                        data-plasmic-override={overrides.addressWrapper}
                        className={classNames(
                          projectcss.all,
                          sty.addressWrapper
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__p9AIp
                          )}
                        >
                          {"398 11th Street, Floor 2\nSan Francisco, CA 94103"}
                        </div>
                      </div>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"footerLinksWrapper4"}
                      data-plasmic-override={overrides.footerLinksWrapper4}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.footerLinksWrapper4
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__geMcU
                        )}
                      >
                        {"Social"}
                      </div>
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"socials"}
                        data-plasmic-override={overrides.socials}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.socials)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jNsgy
                          )}
                        >
                          {"Twitter"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zb0L
                          )}
                        >
                          {"Instagram"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jBjwM
                          )}
                        >
                          {"Tik Tok"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"termsWrapper"}
                      data-plasmic-override={overrides.termsWrapper}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.termsWrapper)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kYsgz
                        )}
                      >
                        {"Terms of Service"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iPTrI
                        )}
                      >
                        {"Privacy Policy"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                  <div
                    data-plasmic-name={"column7"}
                    data-plasmic-override={overrides.column7}
                    className={classNames(projectcss.all, sty.column7)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"logoWrapper9"}
                      data-plasmic-override={overrides.logoWrapper9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logoWrapper9)}
                    >
                      <div
                        data-plasmic-name={"logo9"}
                        data-plasmic-override={overrides.logo9}
                        className={classNames(projectcss.all, sty.logo9)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"valtflowIcon2"}
                          data-plasmic-override={overrides.valtflowIcon2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.valtflowIcon2
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__omP9J
                          )}
                        >
                          {"Vaultflow"}
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "saaSFuturisticApp",
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logoWrapper",
    "logo",
    "valtflowIcon",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary",
    "heroStack",
    "smallContainer",
    "titleSection",
    "pill",
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique",
    "actions",
    "buttonPrimary2",
    "buttonSecondary2",
    "imageWrapper",
    "logoTitle",
    "content2",
    "logos",
    "logoWrapper2",
    "logo2",
    "logoWrapper3",
    "logo3",
    "logoWrapper4",
    "logo4",
    "logoWrapper5",
    "logo5",
    "logoWrapper6",
    "logo6",
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo8",
    "section",
    "sectionTitle",
    "titleWrapper",
    "title",
    "container",
    "_2Columns",
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button",
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2",
    "_2Columns2",
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4",
    "column4",
    "imageWrapper2",
    "image",
    "heroNoImage",
    "container2",
    "content3",
    "ourPowerfulAnalyticsProvidesInvaluableInsights",
    "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement",
    "button3",
    "footer",
    "container3",
    "_3Columns",
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2",
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper",
    "column7",
    "logoWrapper9",
    "logo9",
    "valtflowIcon2"
  ],
  saaSFuturisticApp: [
    "saaSFuturisticApp",
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logoWrapper",
    "logo",
    "valtflowIcon",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary",
    "heroStack",
    "smallContainer",
    "titleSection",
    "pill",
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique",
    "actions",
    "buttonPrimary2",
    "buttonSecondary2",
    "imageWrapper",
    "logoTitle",
    "content2",
    "logos",
    "logoWrapper2",
    "logo2",
    "logoWrapper3",
    "logo3",
    "logoWrapper4",
    "logo4",
    "logoWrapper5",
    "logo5",
    "logoWrapper6",
    "logo6",
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo8",
    "section",
    "sectionTitle",
    "titleWrapper",
    "title",
    "container",
    "_2Columns",
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button",
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2",
    "_2Columns2",
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4",
    "column4",
    "imageWrapper2",
    "image",
    "heroNoImage",
    "container2",
    "content3",
    "ourPowerfulAnalyticsProvidesInvaluableInsights",
    "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement",
    "button3",
    "footer",
    "container3",
    "_3Columns",
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2",
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper",
    "column7",
    "logoWrapper9",
    "logo9",
    "valtflowIcon2"
  ],
  navbarLogoLeft: [
    "navbarLogoLeft",
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logoWrapper",
    "logo",
    "valtflowIcon",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary"
  ],
  navbarContainer: [
    "navbarContainer",
    "navbarContent",
    "navbarBrand",
    "logoWrapper",
    "logo",
    "valtflowIcon",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary"
  ],
  navbarContent: [
    "navbarContent",
    "navbarBrand",
    "logoWrapper",
    "logo",
    "valtflowIcon",
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary"
  ],
  navbarBrand: ["navbarBrand", "logoWrapper", "logo", "valtflowIcon"],
  logoWrapper: ["logoWrapper", "logo", "valtflowIcon"],
  logo: ["logo", "valtflowIcon"],
  valtflowIcon: ["valtflowIcon"],
  navbarMenu: [
    "navbarMenu",
    "navbarLink",
    "navbarLink2",
    "navbarLink3",
    "navbarLink4",
    "buttonPrimary",
    "buttonSecondary"
  ],
  navbarLink: ["navbarLink"],
  navbarLink2: ["navbarLink2"],
  navbarLink3: ["navbarLink3"],
  navbarLink4: ["navbarLink4"],
  buttonPrimary: ["buttonPrimary"],
  buttonSecondary: ["buttonSecondary"],
  heroStack: [
    "heroStack",
    "smallContainer",
    "titleSection",
    "pill",
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique",
    "actions",
    "buttonPrimary2",
    "buttonSecondary2",
    "imageWrapper"
  ],
  smallContainer: [
    "smallContainer",
    "titleSection",
    "pill",
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique",
    "actions",
    "buttonPrimary2",
    "buttonSecondary2",
    "imageWrapper"
  ],
  titleSection: [
    "titleSection",
    "pill",
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique",
    "actions",
    "buttonPrimary2",
    "buttonSecondary2"
  ],
  pill: ["pill"],
  content: [
    "content",
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique"
  ],
  paragraphWrapper: [
    "paragraphWrapper",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique"
  ],
  loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique:
    [
      "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique"
    ],
  actions: ["actions", "buttonPrimary2", "buttonSecondary2"],
  buttonPrimary2: ["buttonPrimary2"],
  buttonSecondary2: ["buttonSecondary2"],
  imageWrapper: ["imageWrapper"],
  logoTitle: [
    "logoTitle",
    "content2",
    "logos",
    "logoWrapper2",
    "logo2",
    "logoWrapper3",
    "logo3",
    "logoWrapper4",
    "logo4",
    "logoWrapper5",
    "logo5",
    "logoWrapper6",
    "logo6",
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo8"
  ],
  content2: [
    "content2",
    "logos",
    "logoWrapper2",
    "logo2",
    "logoWrapper3",
    "logo3",
    "logoWrapper4",
    "logo4",
    "logoWrapper5",
    "logo5",
    "logoWrapper6",
    "logo6",
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo8"
  ],
  logos: [
    "logos",
    "logoWrapper2",
    "logo2",
    "logoWrapper3",
    "logo3",
    "logoWrapper4",
    "logo4",
    "logoWrapper5",
    "logo5",
    "logoWrapper6",
    "logo6",
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite",
    "logoWrapper8",
    "logo8"
  ],
  logoWrapper2: ["logoWrapper2", "logo2"],
  logo2: ["logo2"],
  logoWrapper3: ["logoWrapper3", "logo3"],
  logo3: ["logo3"],
  logoWrapper4: ["logoWrapper4", "logo4"],
  logo4: ["logo4"],
  logoWrapper5: ["logoWrapper5", "logo5"],
  logo5: ["logo5"],
  logoWrapper6: ["logoWrapper6", "logo6"],
  logo6: ["logo6"],
  logoWrapper7: [
    "logoWrapper7",
    "logo7",
    "logoLattice",
    "page1",
    "slide",
    "logoFullWhite"
  ],
  logo7: ["logo7", "logoLattice", "page1", "slide", "logoFullWhite"],
  logoLattice: ["logoLattice", "page1", "slide", "logoFullWhite"],
  page1: ["page1", "slide", "logoFullWhite"],
  slide: ["slide", "logoFullWhite"],
  logoFullWhite: ["logoFullWhite"],
  logoWrapper8: ["logoWrapper8", "logo8"],
  logo8: ["logo8"],
  section: [
    "section",
    "sectionTitle",
    "titleWrapper",
    "title",
    "container",
    "_2Columns",
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button",
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2",
    "_2Columns2",
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4",
    "column4",
    "imageWrapper2",
    "image"
  ],
  sectionTitle: ["sectionTitle", "titleWrapper", "title"],
  titleWrapper: ["titleWrapper", "title"],
  title: ["title"],
  container: [
    "container",
    "_2Columns",
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button",
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2",
    "_2Columns2",
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4",
    "column4",
    "imageWrapper2",
    "image"
  ],
  _2Columns: [
    "_2Columns",
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button",
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2"
  ],
  column: [
    "column",
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button"
  ],
  cardWrapper: [
    "cardWrapper",
    "iconWrapper",
    "iconImage",
    "cardContent",
    "text",
    "actions2",
    "button"
  ],
  iconWrapper: ["iconWrapper", "iconImage"],
  iconImage: ["iconImage"],
  cardContent: ["cardContent", "text", "actions2", "button"],
  text: ["text"],
  actions2: ["actions2", "button"],
  button: ["button"],
  column2: [
    "column2",
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2"
  ],
  cardWrapper2: [
    "cardWrapper2",
    "iconWrapper2",
    "iconImage2",
    "cardContent2",
    "text2",
    "actions3",
    "button2"
  ],
  iconWrapper2: ["iconWrapper2", "iconImage2"],
  iconImage2: ["iconImage2"],
  cardContent2: ["cardContent2", "text2", "actions3", "button2"],
  text2: ["text2"],
  actions3: ["actions3", "button2"],
  button2: ["button2"],
  _2Columns2: [
    "_2Columns2",
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4",
    "column4",
    "imageWrapper2",
    "image"
  ],
  column3: [
    "column3",
    "iconWrapper3",
    "iconImage3",
    "cardContent3",
    "text3",
    "actions4"
  ],
  iconWrapper3: ["iconWrapper3", "iconImage3"],
  iconImage3: ["iconImage3"],
  cardContent3: ["cardContent3", "text3", "actions4"],
  text3: ["text3"],
  actions4: ["actions4"],
  column4: ["column4", "imageWrapper2", "image"],
  imageWrapper2: ["imageWrapper2", "image"],
  image: ["image"],
  heroNoImage: [
    "heroNoImage",
    "container2",
    "content3",
    "ourPowerfulAnalyticsProvidesInvaluableInsights",
    "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement",
    "button3"
  ],
  container2: [
    "container2",
    "content3",
    "ourPowerfulAnalyticsProvidesInvaluableInsights",
    "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement",
    "button3"
  ],
  content3: [
    "content3",
    "ourPowerfulAnalyticsProvidesInvaluableInsights",
    "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement",
    "button3"
  ],
  ourPowerfulAnalyticsProvidesInvaluableInsights: [
    "ourPowerfulAnalyticsProvidesInvaluableInsights"
  ],
  unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement:
    [
      "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement"
    ],
  button3: ["button3"],
  footer: [
    "footer",
    "container3",
    "_3Columns",
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2",
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper",
    "column7",
    "logoWrapper9",
    "logo9",
    "valtflowIcon2"
  ],
  container3: [
    "container3",
    "_3Columns",
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2",
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper",
    "column7",
    "logoWrapper9",
    "logo9",
    "valtflowIcon2"
  ],
  _3Columns: [
    "_3Columns",
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2",
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper",
    "column7",
    "logoWrapper9",
    "logo9",
    "valtflowIcon2"
  ],
  column5: [
    "column5",
    "footerLinksWrapper",
    "footerLinks",
    "footerLinksWrapper2"
  ],
  footerLinksWrapper: ["footerLinksWrapper", "footerLinks"],
  footerLinks: ["footerLinks"],
  footerLinksWrapper2: ["footerLinksWrapper2"],
  column6: [
    "column6",
    "footerLinksWrapper3",
    "addressWrapper",
    "footerLinksWrapper4",
    "socials",
    "termsWrapper"
  ],
  footerLinksWrapper3: ["footerLinksWrapper3", "addressWrapper"],
  addressWrapper: ["addressWrapper"],
  footerLinksWrapper4: ["footerLinksWrapper4", "socials"],
  socials: ["socials"],
  termsWrapper: ["termsWrapper"],
  column7: ["column7", "logoWrapper9", "logo9", "valtflowIcon2"],
  logoWrapper9: ["logoWrapper9", "logo9", "valtflowIcon2"],
  logo9: ["logo9", "valtflowIcon2"],
  valtflowIcon2: ["valtflowIcon2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  saaSFuturisticApp: "div";
  navbarLogoLeft: "div";
  navbarContainer: "div";
  navbarContent: "div";
  navbarBrand: "div";
  logoWrapper: "div";
  logo: "div";
  valtflowIcon: "div";
  navbarMenu: "div";
  navbarLink: "div";
  navbarLink2: "div";
  navbarLink3: "div";
  navbarLink4: "div";
  buttonPrimary: "div";
  buttonSecondary: "div";
  heroStack: "div";
  smallContainer: "div";
  titleSection: "div";
  pill: "div";
  content: "div";
  paragraphWrapper: "div";
  loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique: "div";
  actions: "div";
  buttonPrimary2: "div";
  buttonSecondary2: "div";
  imageWrapper: "div";
  logoTitle: "div";
  content2: "div";
  logos: "div";
  logoWrapper2: "div";
  logo2: "div";
  logoWrapper3: "div";
  logo3: "div";
  logoWrapper4: "div";
  logo4: "div";
  logoWrapper5: "div";
  logo5: "div";
  logoWrapper6: "div";
  logo6: "div";
  logoWrapper7: "div";
  logo7: "div";
  logoLattice: "div";
  page1: "div";
  slide: "div";
  logoFullWhite: "div";
  logoWrapper8: "div";
  logo8: "div";
  section: "div";
  sectionTitle: "div";
  titleWrapper: "div";
  title: "div";
  container: "div";
  _2Columns: "div";
  column: "div";
  cardWrapper: "div";
  iconWrapper: "div";
  iconImage: "div";
  cardContent: "div";
  text: "div";
  actions2: "div";
  button: "div";
  column2: "div";
  cardWrapper2: "div";
  iconWrapper2: "div";
  iconImage2: "div";
  cardContent2: "div";
  text2: "div";
  actions3: "div";
  button2: "div";
  _2Columns2: "div";
  column3: "div";
  iconWrapper3: "div";
  iconImage3: "div";
  cardContent3: "div";
  text3: "div";
  actions4: "div";
  column4: "div";
  imageWrapper2: "div";
  image: "div";
  heroNoImage: "div";
  container2: "div";
  content3: "div";
  ourPowerfulAnalyticsProvidesInvaluableInsights: "div";
  unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement: "div";
  button3: "div";
  footer: "div";
  container3: "div";
  _3Columns: "div";
  column5: "div";
  footerLinksWrapper: "div";
  footerLinks: "div";
  footerLinksWrapper2: "div";
  column6: "div";
  footerLinksWrapper3: "div";
  addressWrapper: "div";
  footerLinksWrapper4: "div";
  socials: "div";
  termsWrapper: "div";
  column7: "div";
  logoWrapper9: "div";
  logo9: "div";
  valtflowIcon2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlank__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlank__VariantsArgs;
    args?: PlasmicBlank__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlank__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBlank__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBlank__ArgProps,
          internalVariantPropNames: PlasmicBlank__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBlank__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlank";
  } else {
    func.displayName = `PlasmicBlank.${nodeName}`;
  }
  return func;
}

export const PlasmicBlank = Object.assign(
  // Top-level PlasmicBlank renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    saaSFuturisticApp: makeNodeComponent("saaSFuturisticApp"),
    navbarLogoLeft: makeNodeComponent("navbarLogoLeft"),
    navbarContainer: makeNodeComponent("navbarContainer"),
    navbarContent: makeNodeComponent("navbarContent"),
    navbarBrand: makeNodeComponent("navbarBrand"),
    logoWrapper: makeNodeComponent("logoWrapper"),
    logo: makeNodeComponent("logo"),
    valtflowIcon: makeNodeComponent("valtflowIcon"),
    navbarMenu: makeNodeComponent("navbarMenu"),
    navbarLink: makeNodeComponent("navbarLink"),
    navbarLink2: makeNodeComponent("navbarLink2"),
    navbarLink3: makeNodeComponent("navbarLink3"),
    navbarLink4: makeNodeComponent("navbarLink4"),
    buttonPrimary: makeNodeComponent("buttonPrimary"),
    buttonSecondary: makeNodeComponent("buttonSecondary"),
    heroStack: makeNodeComponent("heroStack"),
    smallContainer: makeNodeComponent("smallContainer"),
    titleSection: makeNodeComponent("titleSection"),
    pill: makeNodeComponent("pill"),
    content: makeNodeComponent("content"),
    paragraphWrapper: makeNodeComponent("paragraphWrapper"),
    loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique:
      makeNodeComponent(
        "loremIpsumDolorSitAmetConsecteturAdipiscingElitSuspendisseVariusEnimInErosElementumTristique"
      ),
    actions: makeNodeComponent("actions"),
    buttonPrimary2: makeNodeComponent("buttonPrimary2"),
    buttonSecondary2: makeNodeComponent("buttonSecondary2"),
    imageWrapper: makeNodeComponent("imageWrapper"),
    logoTitle: makeNodeComponent("logoTitle"),
    content2: makeNodeComponent("content2"),
    logos: makeNodeComponent("logos"),
    logoWrapper2: makeNodeComponent("logoWrapper2"),
    logo2: makeNodeComponent("logo2"),
    logoWrapper3: makeNodeComponent("logoWrapper3"),
    logo3: makeNodeComponent("logo3"),
    logoWrapper4: makeNodeComponent("logoWrapper4"),
    logo4: makeNodeComponent("logo4"),
    logoWrapper5: makeNodeComponent("logoWrapper5"),
    logo5: makeNodeComponent("logo5"),
    logoWrapper6: makeNodeComponent("logoWrapper6"),
    logo6: makeNodeComponent("logo6"),
    logoWrapper7: makeNodeComponent("logoWrapper7"),
    logo7: makeNodeComponent("logo7"),
    logoLattice: makeNodeComponent("logoLattice"),
    page1: makeNodeComponent("page1"),
    slide: makeNodeComponent("slide"),
    logoFullWhite: makeNodeComponent("logoFullWhite"),
    logoWrapper8: makeNodeComponent("logoWrapper8"),
    logo8: makeNodeComponent("logo8"),
    section: makeNodeComponent("section"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    titleWrapper: makeNodeComponent("titleWrapper"),
    title: makeNodeComponent("title"),
    container: makeNodeComponent("container"),
    _2Columns: makeNodeComponent("_2Columns"),
    column: makeNodeComponent("column"),
    cardWrapper: makeNodeComponent("cardWrapper"),
    iconWrapper: makeNodeComponent("iconWrapper"),
    iconImage: makeNodeComponent("iconImage"),
    cardContent: makeNodeComponent("cardContent"),
    text: makeNodeComponent("text"),
    actions2: makeNodeComponent("actions2"),
    button: makeNodeComponent("button"),
    column2: makeNodeComponent("column2"),
    cardWrapper2: makeNodeComponent("cardWrapper2"),
    iconWrapper2: makeNodeComponent("iconWrapper2"),
    iconImage2: makeNodeComponent("iconImage2"),
    cardContent2: makeNodeComponent("cardContent2"),
    text2: makeNodeComponent("text2"),
    actions3: makeNodeComponent("actions3"),
    button2: makeNodeComponent("button2"),
    _2Columns2: makeNodeComponent("_2Columns2"),
    column3: makeNodeComponent("column3"),
    iconWrapper3: makeNodeComponent("iconWrapper3"),
    iconImage3: makeNodeComponent("iconImage3"),
    cardContent3: makeNodeComponent("cardContent3"),
    text3: makeNodeComponent("text3"),
    actions4: makeNodeComponent("actions4"),
    column4: makeNodeComponent("column4"),
    imageWrapper2: makeNodeComponent("imageWrapper2"),
    image: makeNodeComponent("image"),
    heroNoImage: makeNodeComponent("heroNoImage"),
    container2: makeNodeComponent("container2"),
    content3: makeNodeComponent("content3"),
    ourPowerfulAnalyticsProvidesInvaluableInsights: makeNodeComponent(
      "ourPowerfulAnalyticsProvidesInvaluableInsights"
    ),
    unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement:
      makeNodeComponent(
        "unlockThePowerOfDataWithOurCuttingEdgeAnalyticsProductGetInstantInsightsWithOurUserFriendlyAnalyticsDashboardAndTakeAdvantageOfOurInnovativeDigitalCreditTokensToRewardYourCustomersAndIncentivizeEngagement"
      ),
    button3: makeNodeComponent("button3"),
    footer: makeNodeComponent("footer"),
    container3: makeNodeComponent("container3"),
    _3Columns: makeNodeComponent("_3Columns"),
    column5: makeNodeComponent("column5"),
    footerLinksWrapper: makeNodeComponent("footerLinksWrapper"),
    footerLinks: makeNodeComponent("footerLinks"),
    footerLinksWrapper2: makeNodeComponent("footerLinksWrapper2"),
    column6: makeNodeComponent("column6"),
    footerLinksWrapper3: makeNodeComponent("footerLinksWrapper3"),
    addressWrapper: makeNodeComponent("addressWrapper"),
    footerLinksWrapper4: makeNodeComponent("footerLinksWrapper4"),
    socials: makeNodeComponent("socials"),
    termsWrapper: makeNodeComponent("termsWrapper"),
    column7: makeNodeComponent("column7"),
    logoWrapper9: makeNodeComponent("logoWrapper9"),
    logo9: makeNodeComponent("logo9"),
    valtflowIcon2: makeNodeComponent("valtflowIcon2"),

    // Metadata about props expected for PlasmicBlank
    internalVariantProps: PlasmicBlank__VariantProps,
    internalArgProps: PlasmicBlank__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBlank;
/* prettier-ignore-end */
